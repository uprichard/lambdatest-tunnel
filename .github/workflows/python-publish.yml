# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Autobump version
      if: startsWith(github.ref, 'refs/tags')
      run: |
        # from refs/tags/v1.2.3 get 1.2.3
        VERSION=$(echo $GITHUB_REF | sed 's#.*/v##')
        PLACEHOLDER='__version__ = "develop"'
        VERSION_FILE='lambdatest_tunnel/__init__.py'
        # ensure the placeholder is there. If grep doesn't find the placeholder
        # it exits with exit code 1 and github actions aborts the build.
        grep "$PLACEHOLDER" "$VERSION_FILE"
        sed -i "s/$PLACEHOLDER/__version__ = \"${VERSION}\"/g" "$VERSION_FILE"
    - name: Build package
      run: python setup.py sdist bdist_wheel
    - name: Publish package
      if: github.repository == 'uprichard/lambdatest-tunnel-manager' && startsWith(github.ref, 'refs/tags')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload dist/*